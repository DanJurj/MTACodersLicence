@model MTACodersLicence.ViewModels.PracticeViewModel
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Coding";
}

<!-- antetul cu titlul, timpul si posibilitatea de upload de pe PC a sursei -->
<div class="row">
    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
        <h3 style="color: rebeccapurple">
            @Html.DisplayFor(m => m.Challenge.Name)
        </h3>
    </div>
    
    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
            <h3 style="color: rebeccapurple">
                Solution:
            </h3>
        </div>
        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
            <p style="margin-top: 15px; margin-bottom: -2px;">Upload Source from PC:</p>
            <input type="file" class="btn btn-warning" id="fileinput" style="margin-bottom: 5px; background-color: green">
        </div>
    </div>
</div>
<!-- Partea de Cerinte si de Coding -->
<div class="container row">
    <!-- Cerinte -->
    <div class="col-md-5" id="cerinte">
        <div class="table-bordered cerintaBox">
            <h4>@Html.DisplayNameFor(m => m.Challenge.Desciption) :</h4>
            <p style="white-space: pre-wrap">@Html.DisplayFor(m => m.Challenge.Desciption)</p>
        </div>
        <div class="table-bordered cerintaBox">
            <h4>@Html.DisplayNameFor(m => m.Challenge.Tasks) :</h4>
            <p style="white-space: pre-wrap">@Html.DisplayFor(m => m.Challenge.Tasks)</p>
        </div>
        <div class="table-bordered cerintaBox">
            <h6 style="color: red">@Html.DisplayNameFor(m => m.Challenge.ExecutionTimeLimit) :</h6>
            <p style="white-space: pre-wrap">@Html.DisplayFor(m => m.Challenge.ExecutionTimeLimit) s</p>
        </div>
        <div class="table-bordered cerintaBox">
            <h6 style="color: red">@Html.DisplayNameFor(m => m.Challenge.MemoryLimit) :</h6>
            <p style="white-space: pre-wrap">@Html.DisplayFor(m => m.Challenge.MemoryLimit) Kb</p>
        </div>
        <button id="hintBtn" class="btn btn-success" onclick="showHint()">Show Hint</button>
        <div class="table-bordered cerintaBox" style="display: none" id="hint">
            <h4>@Html.DisplayNameFor(m => m.Challenge.Hint) :</h4>
            <p style="white-space: pre-wrap">@Html.DisplayFor(m => m.Challenge.Hint)</p>
        </div>
    </div>
    <!-- Butoane mijloc -->
    <div class="col-md-1">
        <button id="hideBtn" type="button" class="btn btn-default btn-sm" onclick="hideCerinte()">
            <span class="glyphicon glyphicon-eye-close"></span>
        </button>
        <button id="showBtn" type="button" class="btn btn-default btn-sm" onclick="showCerinte()" style="display: none">
            <span class="glyphicon glyphicon-eye-open"></span>
        </button>
    </div>
    <!-- Coding Part -->
    <div class="col-md-6 table-bordered" id="codingPart">
        <div class="row table-bordered">
            <div class="col-md-3">
                <h3>Language:</h3>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <select asp-for="Language" asp-items="@ViewBag.ProgrammingLanguages" class="form-control" style="margin-top: 16px; margin-left: -10px" id="language" onchange="changeLanguage();"></select>
                </div>
            </div>
            <div class="col-md-3">
                <h3>Theme:</h3>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <select id="theme" class="form-control" style="background-color: cornsilk; margin-top: 16px; margin-left: -35px" onchange="changeTheme()">
                        <option>Ambiance</option>
                        <option>Chaos</option>
                        <option>Chrome</option>
                        <option>Clouds</option>
                        <option>Cobalt</option>
                        <option>Dracula</option>
                        <option>Dreamweaver</option>
                        <option>Eclipse</option>
                        <option>Github</option>
                        <option>Sql Server</option>
                        <option>Terminal</option>
                        <option>XCode</option>
                    </select>
                </div>
            </div>
        </div>

        <pre id="editor" name="editor"></pre>
        <textarea id="code" name="code" style="display: none"></textarea>
        <input type="hidden" name="language" id="languageCode" />
        <!-- input output containers -->
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-5">
                    <h4>
                        <span class="glyphicon glyphicon-log-in" aria-hidden="true"></span> Input <small>optional</small>
                    </h4>
                </div>
                <div class="col-md-5 col-md-offset-2">
                    <h4>
                        <span class="glyphicon glyphicon-log-out" aria-hidden="true" id="outputTag">Output</span>
                    </h4>
                </div>
            </div>
            <div class="row">
                <textarea class="col-md-5" rows="4" style="margin-bottom: 10px;" name="input" id="input"></textarea>
                <textarea class="col-md-5 col-md-offset-2" rows="4" style="margin-bottom: 10px;" disabled id="output"></textarea>
            </div>
            <div class="row" id="performanceTab" style="display: none">
                <h4>
                    <span class="glyphicon glyphicon-log-out" aria-hidden="true">Performance</span>
                </h4>
                <p id="timeConsumed"></p>
                <p id="memory"> </p>
            </div>
        </div>
        <button type="button" value="Run Input" onclick="run2();" class="btn btn-success codeButton" name="codeButton">
            <span class="glyphicon glyphicon-play" aria-hidden="true"></span> Run
        </button>
    </div>
</div>

<!-- Partea de scripturi Javascript -->
<script src="/lib/jquery/dist/jquery.js"></script>
<script src="/lib/bootstrap/dist/js/bootstrap.js"></script>
<script src="~/lib/Ace/src/ace.js"></script>
<script src="~/js/coding.js"></script>
<script type="text/javascript">
    var languages = @Html.Raw(JsonConvert.SerializeObject(this.Model.ProgramingLanguages));
    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/ambiance");
    initEditorMode();

    function initEditorMode() {
        var language = $("#language option:selected").val();
        language = parseInt(language);
        for (var i = 0; i < languages.length; i++)
            if (languages[i].LanguageCode === language) {
                editor.session.setMode(`ace/mode/${languages[i].EditorMode}`);
                editor.setValue(languages[i].CodeTemplate);
                break;
            }
    }

    // functie schimbare limbaj de programare
    function changeLanguage() {
        var code = $('select[id=language]').val();
        editor.setValue(code);
        // change editor mode
        var language = $("#language option:selected").val();
        language = parseInt(language);
        for (var i = 0; i < languages.length; i++)
            if (languages[i].LanguageCode === language ) {
                editor.session.setMode(`ace/mode/${languages[i].EditorMode}`);
                editor.setValue(languages[i].CodeTemplate);
                break;
            }
    }

    document.getElementById('fileinput').addEventListener('change', readSingleFile, false);
</script>

