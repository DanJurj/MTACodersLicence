@model IEnumerable<MTACodersLicence.Models.SolutionModels.SolutionModel>

@{
    ViewData["Title"] = "Solutions";
    var challengeId = ViewData["challengeId"];
    var challengeName = ViewData["challengeName"];
}
<div class="row">
    <h2>Solutions for Challenge: @challengeName</h2>
    <a asp-action="VerifyAll" asp-route-challengeId=@challengeId class="btn btn-success" onclick="showLoading();">Verify all</a>
    <a asp-controller="Challenge" asp-action="Index" class="btn btn-danger">Run anti-theft checker</a>
    <a asp-action="PrintIndex" asp-route-challengeId=@challengeId class="btn btn-warning">Create PDF with results</a>
</div>
<div id="loading" style="display: none;">
    <div id="loadingmsg">Running Battery Tests, please wait...</div>
    <div id="loadingover"></div>
    <div class="loader"></div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                Sent by
                <a asp-action="Index" asp-route-order="ownerAsc" asp-route-challengeId="@challengeId">
                    <span class="glyphicon glyphicon-triangle-top"></span>
                </a>
                <a asp-action="Index" asp-route-order="ownerDesc" asp-route-challengeId="@challengeId">
                    <span class="glyphicon glyphicon-triangle-bottom"></span>
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Score)
                <a asp-action="Index" asp-route-order="scoreAsc" asp-route-challengeId="@challengeId">
                    <span class="glyphicon glyphicon-triangle-top"></span>
                </a>
                <a asp-action="Index" asp-route-order="scoreDesc" asp-route-challengeId="@challengeId">
                    <span class="glyphicon glyphicon-triangle-bottom"></span>
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Grade)
                <a asp-action="Index" asp-route-order="gradeAsc" asp-route-challengeId="@challengeId">
                    <span class="glyphicon glyphicon-triangle-top"></span>
                </a>
                <a asp-action="Index" asp-route-order="gradeDesc" asp-route-challengeId="@challengeId">
                    <span class="glyphicon glyphicon-triangle-bottom"></span>
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReceiveDateTime)
                <a asp-action="Index" asp-route-order="dateAsc" asp-route-challengeId="@challengeId">
                    <span class="glyphicon glyphicon-triangle-top"></span>
                </a>
                <a asp-action="Index" asp-route-order="dateDesc" asp-route-challengeId="@challengeId">
                    <span class="glyphicon glyphicon-triangle-bottom"></span>
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Duration)
                <a asp-action="Index" asp-route-order="durationAsc" asp-route-challengeId="@challengeId">
                    <span class="glyphicon glyphicon-triangle-top"></span>
                </a>
                <a asp-action="Index" asp-route-order="durationDesc" asp-route-challengeId="@challengeId">
                    <span class="glyphicon glyphicon-triangle-bottom"></span>
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Verified)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="UserDetails" asp-route-userId="@item.Owner.Id">@Html.DisplayFor(modelItem => item.Owner.LastName) @Html.DisplayFor(modelItem => item.Owner.FirstName)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Score)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Grade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReceiveDateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Duration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Verified)
                </td>
                <td>
                    <form asp-controller="Solution" asp-action="Delete">
                        <button type="button" class="btn btn-success" onclick="toggleVerify(@item.Id)">Verify</button>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-warning">Details</a>
                        <input name="id" value="@item.Id" hidden />
                        <button type="submit" class="btn btn-danger">Delete</button>
                        <a asp-action="Results" class="btn btn-default" asp-route-id="@item.Id" asp-route-challengeId="@item.ChallengeId">Results</a>
                    </form>
                </td>
            </tr>
            <tr style="display: none;" id="@item.Id">
                @if (item.Challenge.Batteries != null)
                {
                    foreach (var battery in item.Challenge.Batteries)
                    {

                        <th><a asp-controller="Battery" asp-action="Details" asp-route-id="@battery.Id">@battery.Name</a></th>
                        <td><a asp-action="Run" asp-route-id="@item.Id" asp-route-batteryId="@battery.Id" class="btn btn-success" onclick="showLoading();">Run</a></td>
                    }
                }
            </tr>
        }
    </tbody>
</table>
<a asp-controller="Challenge" asp-action="Index" class="btn btn-default">Back to Challenges</a>
<script>
    function toggleVerify(id) {
        var elem = document.getElementById(id);
        $(elem).fadeToggle('fast');
    }

    function showLoading() {
        document.getElementById('loading').style.display = 'block';
    }
</script>


